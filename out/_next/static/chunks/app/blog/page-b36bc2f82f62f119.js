(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[404],{4909:function(e,n,l){Promise.resolve().then(l.bind(l,1064))},1064:function(e,n,l){"use strict";l.r(n),l.d(n,{default:function(){return E}});var a=l(7437),r=JSON.parse('[{"slug":"blog/add-two-number_leetcode","title":"Add Two Numbers","description":"Solve the \\"Add Two Numbers\\" problem efficiently using linked lists in Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:e,jsx:n,jsxs:l}=arguments[0];function _createMdxContent(a){const r={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",ul:\\"ul\\",...a.components};return l(e,{children:[n(r.h2,{id:\\"problem-statement\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",n(r.p,{children:\\"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\\"}),\\"\\\\n\\",n(r.p,{children:\\"You may assume the two numbers do not contain any leading zero, except the number 0 itself.\\"}),\\"\\\\n\\",n(r.h3,{id:\\"example-1\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(r.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Input:  l1 = [2,4,3], l2 = [5,6,4]  \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Output:  [7,0,8]  \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Explanation:  342 + 465 = 807.\\"})})]})})}),\\"\\\\n\\",n(r.h3,{id:\\"example-2\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(r.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Input:  l1 = [0], l2 = [0]  \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Output: [0]\\"})})]})})}),\\"\\\\n\\",n(r.h3,{id:\\"example-3\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-3\\",children:\\"Example 3:\\"})}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(r.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]  \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"Output: [8,9,9,9,0,0,0,1]\\"})})]})})}),\\"\\\\n\\",n(r.h3,{id:\\"constraints\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#constraints\\",children:\\"Constraints:\\"})}),\\"\\\\n\\",l(r.ul,{children:[\\"\\\\n\\",n(r.li,{children:\\"The number of nodes in each linked list is in the range [1, 100].\\"}),\\"\\\\n\\",n(r.li,{children:n(r.code,{children:\\"0 <= Node.val <= 9\\"})}),\\"\\\\n\\",n(r.li,{children:\\"It is guaranteed that the list represents a number that does not have leading zeros.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(r.h2,{id:\\"approach\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",n(r.p,{children:\\"We will use a linked list to simulate the addition of two numbers, digit by digit, from the least significant to the most significant (reverse order). At each step, we add the corresponding digits and carry, if any.\\"}),\\"\\\\n\\",n(r.h3,{id:\\"algorithm\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(r.ol,{children:[\\"\\\\n\\",n(r.li,{children:\\"Initialize a dummy head node to simplify the process of building the result linked list.\\"}),\\"\\\\n\\",n(r.li,{children:\\"Iterate over both linked lists simultaneously, adding corresponding digits and the carry.\\"}),\\"\\\\n\\",n(r.li,{children:\\"If one linked list is shorter, treat missing nodes as zeros.\\"}),\\"\\\\n\\",n(r.li,{children:\\"If there is a remaining carry after both linked lists are exhausted, add it as a new node.\\"}),\\"\\\\n\\",n(r.li,{children:\\"Return the next node of the dummy head as the result linked list.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(r.h3,{id:\\"flowchart\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",n(r.p,{children:n(r.img,{src:\\"/leetcode/add_two.png\\",alt:\\"Flowchart of Add Two Algorithm\\"})}),\\"\\\\n\\",n(r.h3,{id:\\"implementation-in-go\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(r.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"// ListNode defines a linked list node\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"// AddTwoNumbers adds two numbers represented by two linked lists.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"// Each linked list stores digits in reverse order, and the function\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"// returns the sum as a linked list, also in reverse order.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(r.span,{style:{color:\\"#B392F0\\"},children:\\" AddTwoNumbers\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(r.span,{style:{color:\\"#FFAB70\\"},children:\\"l1\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\" *\\"}),n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ListNode\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),n(r.span,{style:{color:\\"#FFAB70\\"},children:\\"l2\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\" *\\"}),n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ListNode\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ListNode\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // Create a dummy node to simplify the logic of appending nodes to the result list.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"    head \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\" &\\"}),n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ListNode\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"{Val: \\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // Initialize variables: \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // - n1 and n2 are the digits from the two linked lists.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\'    // - carry holds any value that \\"carries over\\" to the next digit.\'})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // - current is a pointer used to build the result list.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"    n1, n2, carry, current \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", head\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // Continue looping while there are still nodes in either l1 or l2, \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // or if there\'s still a carry to process (e.g., when adding two 9s).\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" nil\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\" ||\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" nil\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\" ||\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" carry \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Get the value from the current node of l1, if it exists. \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Otherwise, set n1 to 0.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" nil\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"            n1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l1.Val\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"            l1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l1.Next \\"}),n(r.span,{style:{color:\\"#6A737D\\"},children:\\"// Move to the next node in l1.\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        } \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"            n1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Get the value from the current node of l2, if it exists. \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Otherwise, set n2 to 0.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" nil\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"            n2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l2.Val\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"            l2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" l2.Next \\"}),n(r.span,{style:{color:\\"#6A737D\\"},children:\\"// Move to the next node in l2.\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        } \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"            n2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Create a new node for the result linked list.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // The value of this node is the sum of n1, n2, and carry, modulo 10.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // This handles cases where the sum exceeds 9 (e.g., 5 + 6 = 11, so we store 1 and carry 1).\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        current.Next \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\" &\\"}),n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ListNode\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"{Val: (n1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" n2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" carry) \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"%\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 10\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Move the current pointer to the next node in the result list.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        current \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" current.Next\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        \\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Update the carry for the next iteration.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // If the sum of n1, n2, and carry is 10 or greater, carry will be 1.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"        // Otherwise, carry will be 0.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"        carry \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" (n1 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" n2 \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" carry) \\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"/\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 10\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // Return the result linked list, starting from head.Next.\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#6A737D\\"},children:\\"    // head is just a dummy node used to simplify the logic, so we skip it.\\"})}),\\"\\\\n\\",l(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"    return\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" head.Next\\"})]}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})})]})})}),\\"\\\\n\\",n(r.h3,{id:\\"explanation\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(r.ul,{children:[\\"\\\\n\\",n(r.li,{children:\\"Initialize Variables: We initialize a dummy head node, which simplifies appending new nodes to the result list. Variables n1, n2, and carry are used to store values from the linked lists and any carry-over during addition.\\"}),\\"\\\\n\\",n(r.li,{children:\\"Iterating Through Lists: We loop until all nodes in both lists are processed and the carry is zero. At each iteration, we extract values from the lists or use 0 if a list is exhausted. Then, we compute the sum and update the carry for the next iteration.\\"}),\\"\\\\n\\",n(r.li,{children:\\"Return the Result: After processing all digits, we return the result list starting from head.Next (since head is a dummy node).\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(r.h3,{id:\\"time-and-space-complexity\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(r.ul,{children:[\\"\\\\n\\",n(r.li,{children:\\"Time Complexity: O(n), where n is the maximum number of nodes in the two linked lists. We iterate through all nodes once.\\"}),\\"\\\\n\\",n(r.li,{children:\\"Space Complexity: O(n) as well, since we are creating a new linked list of size proportional to the input size.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(r.h2,{id:\\"conclusion\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",n(r.p,{children:\\"This solution demonstrates an efficient way to add two numbers represented as linked lists. By utilizing a dummy head node and handling the carry correctly, we can maintain a clean and readable implementation. The time and space complexity is linear, making this approach optimal for this problem.\\"})]})}return{default:function(e={}){const{wrapper:l}=e.components||{};return l?n(l,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"add-two-number_leetcode"},{"slug":"blog/hello-leetcode","title":"Hello World in Rust","description":"Learn how to write a \\"Hello World\\" program in Rust.","date":"2023-08-27T00:00:00.000Z","published":true,"tags":["rust"],"body":"const{Fragment:e,jsx:n,jsxs:t}=arguments[0];function _createMdxContent(r){const o={a:\\"a\\",h1:\\"h1\\",p:\\"p\\",...r.components};return t(e,{children:[n(o.h1,{id:\\"hello-world-in-rust\\",children:n(o.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#hello-world-in-rust\\",children:\\"Hello World in Rust\\"})}),\\"\\\\n\\",n(o.p,{children:\'Rust is a powerful and safe programming language suitable for various applications. Let\\\\\'s start with the traditional \\"Hello World\\" program to get a feel for how Rust works.\'})]})}return{default:function(e={}){const{wrapper:t}=e.components||{};return t?n(t,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"hello-leetcode"},{"slug":"blog/hello","title":"Hello World in Python","description":"Learn how to write a \\"Hello World\\" program in Python.","date":"2023-08-27T00:00:00.000Z","published":true,"tags":["python"],"body":"const{Fragment:e,jsx:n,jsxs:r}=arguments[0];function _createMdxContent(o){const t={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",...o.components};return r(e,{children:[n(t.h2,{id:\\"hello-world-in-python\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#hello-world-in-python\\",children:\\"Hello World in Python\\"})}),\\"\\\\n\\",n(t.p,{children:\'Python is a versatile and beginner-friendly programming language. Let\\\\\'s start with the traditional \\"Hello World\\" program to get a feel for how Python works.\'}),\\"\\\\n\\",n(t.h2,{id:\\"writing-your-first-python-program\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#writing-your-first-python-program\\",children:\\"Writing Your First Python Program\\"})}),\\"\\\\n\\",n(t.p,{children:\'To write a \\"Hello World\\" program in Python, follow these steps:\'}),\\"\\\\n\\",r(t.ol,{children:[\\"\\\\n\\",r(t.li,{children:[\\"\\\\n\\",r(t.p,{children:[n(t.strong,{children:\\"Open a Text Editor:\\"}),\\" You can use any text editor or code editor of your choice. Create a new file and save it with a \\",n(t.code,{children:\\".py\\"}),\\" extension, like \\",n(t.code,{children:\\"hello.py\\"}),\\".\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",r(t.li,{children:[\\"\\\\n\\",r(t.p,{children:[n(t.strong,{children:\\"Write the Code:\\"}),\\" In your \\",n(t.code,{children:\\".py\\"}),\\" file, enter the following code:\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",children:n(t.code,{\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:r(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(t.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Hello, World!\\"\'}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]})})})})]})}return{default:function(e={}){const{wrapper:r}=e.components||{};return r?n(r,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"hello"},{"slug":"blog/hello_rust","title":"Hello World in Rust","description":"Learn how to write a \\"Hello World\\" program in Rust.","date":"2023-08-27T00:00:00.000Z","published":true,"tags":["rust"],"body":"const{Fragment:e,jsx:r,jsxs:n}=arguments[0];function _createMdxContent(l){const o={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h1:\\"h1\\",h2:\\"h2\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",...l.components};return n(e,{children:[r(o.h1,{id:\\"hello-world-in-rust\\",children:r(o.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#hello-world-in-rust\\",children:\\"Hello World in Rust\\"})}),\\"\\\\n\\",r(o.p,{children:\'Rust is a powerful and safe programming language suitable for various applications. Let\\\\\'s start with the traditional \\"Hello World\\" program to get a feel for how Rust works.\'}),\\"\\\\n\\",r(o.h2,{id:\\"writing-your-first-rust-program\\",children:r(o.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#writing-your-first-rust-program\\",children:\\"Writing Your First Rust Program\\"})}),\\"\\\\n\\",r(o.p,{children:\'To write a \\"Hello World\\" program in Rust, follow these steps:\'}),\\"\\\\n\\",n(o.ol,{children:[\\"\\\\n\\",n(o.li,{children:[\\"\\\\n\\",n(o.p,{children:[r(o.strong,{children:\\"Open a Text Editor:\\"}),\\" You can use any text editor or code editor of your choice. Create a new file and save it with a \\",r(o.code,{children:\\".rs\\"}),\\" extension, like \\",r(o.code,{children:\\"hello.rs\\"}),\\".\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(o.li,{children:[\\"\\\\n\\",n(o.p,{children:[r(o.strong,{children:\\"Write the Code:\\"}),\\" In your \\",r(o.code,{children:\\".rs\\"}),\\" file, enter the following code:\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",r(o.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:r(o.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"rust\\",\\"data-theme\\":\\"github-dark\\",children:n(o.code,{\\"data-language\\":\\"rust\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(o.span,{\\"data-line\\":\\"\\",children:[r(o.span,{style:{color:\\"#F97583\\"},children:\\"fn\\"}),r(o.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),r(o.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",n(o.span,{\\"data-line\\":\\"\\",children:[r(o.span,{style:{color:\\"#B392F0\\"},children:\\"    println!\\"}),r(o.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),r(o.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Hello, World!\\"\'}),r(o.span,{style:{color:\\"#E1E4E8\\"},children:\\");\\"})]}),\\"\\\\n\\",r(o.span,{\\"data-line\\":\\"\\",children:r(o.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})})]})})})]})}return{default:function(e={}){const{wrapper:n}=e.components||{};return n?r(n,{...e,children:r(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"hello_rust"},{"slug":"blog/longest-palingdrome-substring_leetcode","title":"Longest Palindromic Substring","description":"Solve the \\"Longest Palindromic Substring\\" problem efficiently using expand around center technique in Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:n,jsx:e,jsxs:l}=arguments[0];function _createMdxContent(r){const a={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components};return l(n,{children:[e(a.h2,{id:\\"problem-statement\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",l(a.p,{children:[\\"Given a string \\",e(a.code,{children:\\"s\\"}),\\", return the longest palindromic substring in \\",e(a.code,{children:\\"s\\"}),\\".\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"example-1\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Input: `s = \\"babad\\"`\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Output: `\\"bab\\"`\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Explanation: `\\"aba\\"` is also a valid answer.\'})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"example-2\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Input: `s = \\"cbbd\\"`\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Output: `\\"bb\\"`\'})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"constraints\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#constraints\\",children:\\"Constraints:\\"})}),\\"\\\\n\\",l(a.ul,{children:[\\"\\\\n\\",e(a.li,{children:\\"( 1 \\\\\\\\leq s.length \\\\\\\\leq 1000 )\\"}),\\"\\\\n\\",l(a.li,{children:[e(a.code,{children:\\"s\\"}),\\" consists of only digits and English letters.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h2,{id:\\"approach\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",l(a.p,{children:[\\"To find the longest palindromic substring, we can use the \\",e(a.strong,{children:\\"expand around center\\"}),\\" technique. The idea is to iterate through each character in the string and treat it as the center of a potential palindrome. Since palindromes can be of both odd and even lengths, we will check for both cases.\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"algorithm\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(a.ol,{children:[\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Expand Around Center\\"}),\\": For each character in the string, we expand outwards to check how far we can go while maintaining the palindrome property.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Track the Longest Palindrome\\"}),\\": During each expansion, if we find a longer palindrome than the previously recorded one, we update our longest palindrome substring.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"flowchart\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",e(a.p,{children:e(a.img,{src:\\"/leetcode/longest_palingdrome.png\\",alt:\\"Flowchart of Longest Palindromic Substring \\"})}),\\"\\\\n\\",e(a.h3,{id:\\"implementation-in-go\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",e(a.p,{children:\\"Here is the Go implementation of the solution:\\"}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\'}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// longestPalindrome finds the longest palindromic substring in s\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" longestPalindrome\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"s\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tstart, end \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tfor\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s); i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"\\\\t\\\\t// Expand around the center for odd-length palindromes\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tlen1 \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" expandAroundCenter\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s, i, i)\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"\\\\t\\\\t// Expand around the center for even-length palindromes\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tlen2 \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" expandAroundCenter\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s, i, i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"\\\\t\\\\t// Choose the longer palindrome\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tlen \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" max\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(len1, len2)\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\tif\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" len \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" end\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"start {\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"\\\\t\\\\t\\\\t// Update start and end indices of the longest palindrome found\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t\\\\tstart \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" (len\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"/\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t\\\\tend \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" len\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"/\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" s[start : end\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"]\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// expandAroundCenter expands around the given center indices and returns the length of the palindrome\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" expandAroundCenter\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"s\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"left\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"right\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tL, R \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" left, right\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tfor\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" L \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\">=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" &&\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" R \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s) \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" s[L] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" s[R] {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tL\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"--\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tR\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" R \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" L \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\" // Length of the palindrome\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// max returns the maximum of two integers\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" max\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"a\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"b\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" a \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" b {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\treturn\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" a\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" b\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\ts1 \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"babad\\"\'})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"longestPalindrome\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s1)) \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\'// Output: \\"bab\\" or \\"aba\\"\'})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\ts2 \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"cbbd\\"\'})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"longestPalindrome\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s2)) \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\'// Output: \\"bb\\"\'})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"explanation\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(a.ol,{children:[\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Initialization\\"}),\\": We initialize start and end to track the longest palindrome\'s indices.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Iterating Through Characters\\"}),\\": For each character in the string, we consider it as a center and attempt to expand outwards for both odd-length and even-length palindromes.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Updating Longest Palindrome\\"}),\\": Whenever we find a longer palindrome than previously recorded, we update the start and end indices to capture the new longest substring.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"time-and-space-complexity\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(a.ol,{children:[\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Time Complexity\\"}),\\": O(n^2), where n is the length of the input string. In the worst case, we may need to check all characters and expand around them.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Space Complexity\\"}),\\": O(1), as we are only using a few variables to track indices and lengths.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h2,{id:\\"conclusion\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",e(a.p,{children:\\"This solution effectively finds the longest palindromic substring using the expand around center technique, providing a straightforward approach that balances clarity and efficiency. The algorithm is suitable for input strings of lengths up to 1000, making it efficient for competitive programming and interview scenarios.\\"})]})}return{default:function(n={}){const{wrapper:l}=n.components||{};return l?e(l,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"longest-palingdrome-substring_leetcode"},{"slug":"blog/longest-substring_leetcode","title":"Longest Substring Without Repeating Characters","description":"Solve the \\"Longest Substring Without Repeating Characters\\" problem efficiently using sliding window technique in Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:e,jsx:n,jsxs:l}=arguments[0];function _createMdxContent(i){const t={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...i.components};return l(e,{children:[n(t.h2,{id:\\"problem-statement\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",l(t.p,{children:[\\"Given a string \\",n(t.code,{children:\\"s\\"}),\\", find the length of the longest substring without repeating characters.\\"]}),\\"\\\\n\\",n(t.h3,{id:\\"example-1\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(t.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\'Input: `s = \\"abcabcbb\\"`\'})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\\"Output: `3`\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\'Explanation: The answer is `\\"abc\\"`, with the length of 3.\'})})]})})}),\\"\\\\n\\",n(t.h3,{id:\\"example-2\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(t.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\'Input: `s = \\"bbbbb\\"`\'})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\\"Output: `1`\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\'Explanation: The answer is `\\"b\\"`, with the length of 1.\'})})]})})}),\\"\\\\n\\",n(t.h3,{id:\\"example-3\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-3\\",children:\\"Example 3:\\"})}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(t.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\'Input: `s = \\"pwwkew\\"`\'})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\\"Output: `3`\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{children:\'Explanation: The answer is `\\"wke\\"`, with the length of 3. Notice that the answer must be a substring, `\\"pwke\\"` is a subsequence, not a substring.\'})})]})})}),\\"\\\\n\\",n(t.h3,{id:\\"constraints\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#constraints\\",children:\\"Constraints:\\"})}),\\"\\\\n\\",l(t.ul,{children:[\\"\\\\n\\",n(t.li,{children:n(t.code,{children:\\"0 <= s.length <= 5 * 10^4\\"})}),\\"\\\\n\\",l(t.li,{children:[n(t.code,{children:\\"s\\"}),\\" consists of English letters, digits, symbols, and spaces.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(t.h2,{id:\\"approach\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",n(t.p,{children:\'To solve the \\"Longest Substring Without Repeating Characters\\" problem, we can use the sliding window technique. The sliding window is a flexible tool for solving problems where we need to check a substring or subarray, and it allows us to efficiently explore possible solutions without recomputing the whole window from scratch each time.\'}),\\"\\\\n\\",n(t.h3,{id:\\"sliding-window-concept\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#sliding-window-concept\\",children:\\"Sliding Window Concept\\"})}),\\"\\\\n\\",n(t.p,{children:\\"Window Definition: The sliding window is defined by two pointers, left and right, which represent the start and end of the current substring.\\\\nExpanding the Window: We move the right pointer to include new characters into the window.\\\\nContracting the Window: If a duplicate character is encountered (i.e., a character that already exists within the current window), we move the left pointer to remove characters until the duplicate is no longer in the window.\\\\nTracking the Longest Substring: At each step, we calculate the length of the current valid substring and keep track of the maximum length found so far.\\"}),\\"\\\\n\\",n(t.h3,{id:\\"key-observations\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#key-observations\\",children:\\"Key Observations\\"})}),\\"\\\\n\\",n(t.p,{children:\\"The substring must not contain repeating characters, meaning that each time we encounter a duplicate, we need to shrink the window.\\\\nWe use a bitset (boolean array) to track the characters in the current window. This helps in determining whether the current character is a duplicate.\\\\nAt each step, we update the result with the length of the current substring if it\'s the longest we\'ve seen so far.\\"}),\\"\\\\n\\",n(t.h3,{id:\\"algorithm\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",n(t.p,{children:\\"We can solve this problem using the sliding window technique. The sliding window technique allows us to efficiently check all substrings while only iterating over the string once.\\"}),\\"\\\\n\\",l(t.ol,{children:[\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Sliding Window\\"}),\\": We use two pointers (\\",n(t.code,{children:\\"left\\"}),\\" and \\",n(t.code,{children:\\"right\\"}),\\") to represent the current window of the substring.\\"]}),\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Bitset Array\\"}),\\": We maintain a boolean array \\",n(t.code,{children:\\"bitset\\"}),\\" of size 256 (ASCII characters) to track whether a character exists in the current window.\\"]}),\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Expanding and Contracting\\"}),\\":\\",\\"\\\\n\\",l(t.ul,{children:[\\"\\\\n\\",l(t.li,{children:[\\"As we move the \\",n(t.code,{children:\\"right\\"}),\\" pointer across the string, we check if the current character is already in the substring.\\"]}),\\"\\\\n\\",l(t.li,{children:[\\"If it is, we shrink the window by moving the \\",n(t.code,{children:\\"left\\"}),\\" pointer.\\"]}),\\"\\\\n\\",n(t.li,{children:\\"If not, we expand the window and update the result.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Result Calculation\\"}),\\": At each step, we calculate the length of the current window and update the result if it\'s larger than the previous value.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(t.h3,{id:\\"flowchart\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",n(t.p,{children:n(t.img,{src:\\"/leetcode/longest_3.png\\",alt:\\"Flowchart of Longest Substring Without Repeating Characters\\"})}),\\"\\\\n\\",n(t.h3,{id:\\"implementation-in-go\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(t.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),n(t.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\'}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),n(t.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#6A737D\\"},children:\\"// LengthOfLongestSubstring finds the length of the longest substring without repeating characters\\"})}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" LengthOfLongestSubstring\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(t.span,{style:{color:\\"#FFAB70\\"},children:\\"s\\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\" string\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"    if\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s) \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"        return\\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"    var\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" bitset [\\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\"256\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"]\\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"bool\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"    result, left, right \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#6A737D\\"},children:\\"    // Sliding window with two pointers\\"})}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" left \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s) {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" bitset[s[right]] {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"            bitset[s[left]] \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\" false\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"            left\\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),n(t.span,{style:{color:\\"#6A737D\\"},children:\\" // Shrink the window\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"        } \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"            bitset[s[right]] \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(t.span,{style:{color:\\"#79B8FF\\"},children:\\" true\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"            right\\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),n(t.span,{style:{color:\\"#6A737D\\"},children:\\" // Expand the window\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#6A737D\\"},children:\\"        // Update the result if the current window is larger\\"})}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" result \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" right\\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"left {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"            result \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" right \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" left\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#6A737D\\"},children:\\"        // Break if we have covered the entire string\\"})}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" left\\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"result \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\">=\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s) \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\"||\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" right \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\">=\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s) {\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#F97583\\"},children:\\"            break\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"    return\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\" result\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"    s \\"}),n(t.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),n(t.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"abcabcbb\\"\'})]}),\\"\\\\n\\",l(t.span,{\\"data-line\\":\\"\\",children:[n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(t.span,{style:{color:\\"#B392F0\\"},children:\\"LengthOfLongestSubstring\\"}),n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s)) \\"}),n(t.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 3\\"})]}),\\"\\\\n\\",n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})})]})})}),\\"\\\\n\\",n(t.h3,{id:\\"explanation\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(t.ol,{children:[\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Initial Setup\\"}),\\": We first check if the string s is empty. If it is, we return 0 because there\'s no substring.\\"]}),\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Bitset and Two Pointers\\"}),\\": We initialize a boolean array bitset to track if a character is already in the current window. We also set up two pointers left and right to mark the bounds of the sliding window.\\"]}),\\"\\\\n\\",n(t.li,{children:\\"Sliding Window:\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",l(t.ul,{children:[\\"\\\\n\\",n(t.li,{children:\\"For each character in the string, we check if it has already appeared in the current window.\\"}),\\"\\\\n\\",n(t.li,{children:\\"If it has, we move the left pointer to shrink the window.\\"}),\\"\\\\n\\",n(t.li,{children:\\"Otherwise, we move the right pointer to expand the window and include the new character.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",l(t.ol,{start:\\"4\\",children:[\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Result Update\\"}),\\": After each iteration, we check if the current window size (right - left) is larger than the previous result. If so, we update the result.\\"]}),\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Termination\\"}),\\": The loop stops when either pointer reaches the end of the string or when the longest possible substring has been found.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(t.h3,{id:\\"time-and-space-complexity\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(t.ul,{children:[\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Time Complexity\\"}),\\": O(n) where n is the length of the string. Each character is visited at most twice (once by the right pointer and once by the left pointer).\\"]}),\\"\\\\n\\",l(t.li,{children:[n(t.strong,{children:\\"Space Complexity\\"}),\\": O(1) because we use a fixed-size bitset array of 256 elements to track the presence of characters. This space usage does not depend on the input size.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(t.h2,{id:\\"conclusion\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",n(t.p,{children:\'The sliding window technique provides an efficient way to solve the \\"Longest Substring Without Repeating Characters\\" problem in linear time. By maintaining a bitset and adjusting the window size as we iterate through the string, we can easily track the longest valid substring.\'})]})}return{default:function(e={}){const{wrapper:l}=e.components||{};return l?n(l,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"longest-substring_leetcode"},{"slug":"blog/mathematics_for_ai","title":"Matematika for Artificial Intelligence","description":"Matematika dasar yang digunakan dalam Kecerdasan Buatan (AI).","date":"2023-08-27T00:00:00.000Z","published":true,"tags":["python","mathematics","artificial-intelligence"],"body":"const{Fragment:n,jsx:a,jsxs:e}=arguments[0];function _createMdxContent(l){const r={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h1:\\"h1\\",h2:\\"h2\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",...l.components};return e(n,{children:[a(r.h1,{id:\\"matematika-for-artificial-intelligence\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#matematika-for-artificial-intelligence\\",children:\\"Matematika for Artificial Intelligence\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Matematika adalah bahasa yang mendasari Kecerdasan Buatan (AI) dan Machine Learning (ML). Dalam artikel ini, kita akan menjelaskan konsep matematika dasar yang digunakan dalam AI, termasuk Aljabar Linear, Kalkulus, dan Statistik, serta memberikan contoh penggunaannya.\\"}),\\"\\\\n\\",a(r.h1,{id:\\"aljabar-linear\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#aljabar-linear\\",children:\\"Aljabar Linear\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Dalam matematika, Aljabar Linear adalah cabang yang penting dan digunakan luas dalam berbagai disiplin ilmu, termasuk Kecerdasan Buatan. Mari kita jelajahi konsep Aljabar Linear dari tingkatan kesulitan yang berbeda.\\"}),\\"\\\\n\\",a(r.h2,{id:\\"aljabar-linier-1-dimensi\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#aljabar-linier-1-dimensi\\",children:\\"Aljabar linier 1 Dimensi\\"})}),\\"\\\\n\\",a(r.p,{children:\\"In one dimension, linear algebra operations typically involve scalar values represented as real numbers. Here are some mathematical representations:\\"}),\\"\\\\n\\",a(r.p,{children:\\"Scalar Addition:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Scalar1 + Scalar2 = 3 + 5 = 8\\\\n\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Scalar Multiplication:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Scalar * Scalar1 = 2 * 3 = 6\\\\n\\"})}),\\"\\\\n\\",a(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:a(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",children:e(r.code,{\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" numpy \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" np\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"scalar1 \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 3\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"scalar2\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 5\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"result_addition \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" scalar1 \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" scalar2\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Scalar 1 + Scalar 2 = \\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", result_addition)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"scalar \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 2\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"result_multiplication \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" scalar \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" scalar1\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Scalar * Scalar 1 = \\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", result_multiplication)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",a(r.h2,{id:\\"aljabar-linier-2-dimensi\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#aljabar-linier-2-dimensi\\",children:\\"Aljabar linier 2 Dimensi\\"})}),\\"\\\\n\\",a(r.p,{children:\\"In two dimensions, you work with vectors represented as pairs of numbers (x, y). Here are some mathematical representations:\\"}),\\"\\\\n\\",a(r.p,{children:\\"Vector Addition:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Vector1 + Vector2 = (2, 3) + (4, 5) = (2 + 4, 3 + 5) = (6, 8)\\\\n\\\\n\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Scalar Multiplication:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Scalar * Vector1 = 2 * (2, 3) = (2 * 2, 2 * 3) = (4, 6)\\\\n\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Dot Product:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Dot Product of Vector1 and Vector2 = (2, 3) \xb7 (4, 5) = 2 * 4 + 3 * 5 = 8 + 15 = 23\\\\n\\"})}),\\"\\\\n\\",a(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:a(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",children:e(r.code,{\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"vector1 \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" np.array([\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"3\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"])\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"vector2 \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" np.array([\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"4\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"5\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"])\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"result_addition \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" vector1 \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" vector2\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Vector 1 + Vector 2 = \\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", result_addition)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"scalar \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 2\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"result_multiplication \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" scalar \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" vector1\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Scalar * Vector 1 = \\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", result_multiplication)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"dot_product \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" np.dot(vector1, vector2)\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Dot Product of Vector1 and Vector 2 = \\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\",  dot_product)\\"})]})]})})}),\\"\\\\n\\",a(r.h2,{id:\\"aljabar-linier-3-dimensi\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#aljabar-linier-3-dimensi\\",children:\\"Aljabar linier 3 Dimensi\\"})}),\\"\\\\n\\",a(r.p,{children:\\"In three dimensions, vectors are represented as triplets (x, y, z). Here are some mathematical representations:\\"}),\\"\\\\n\\",a(r.p,{children:\\"Vector Addition:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Vector1 + Vector2 = (2, 3, 1) + (4, 5, 2) = (2 + 4, 3 + 5, 1 + 2) = (6, 8, 3)\\\\n\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Scalar Multiplication:\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Scalar * Vector1 = 2 * (2, 3, 1) = (2 * 2, 2 * 3, 2 * 1) = (4, 6, 2)\\\\n\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Cross Product (in three dimensions):\\"}),\\"\\\\n\\",a(r.pre,{children:a(r.code,{children:\\"Cross Product of Vector1 and Vector2 = (2, 3, 1) \xd7 (4, 5, 2) = ((3 * 2 - 5 * 1), (2 * 4 - 1 * 2), (4 * 5 - 3 * 2)) = (1, 6, 14)\\\\n\\\\n\\"})}),\\"\\\\n\\",a(r.h1,{id:\\"calculus\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#calculus\\",children:\\"Calculus\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Kalkulus adalah cabang matematika yang mempelajari perubahan dan laju perubahan. Dalam materi ini, kami akan menjelaskan tiga konsep dasar Kalkulus: Turunan, Integral Tak Tentu, dan Integral Tentu, dan juga menunjukkan bagaimana cara menggunakan Python untuk menghitungnya.\\"}),\\"\\\\n\\",a(r.h2,{id:\\"konsep-1-turunan\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#konsep-1-turunan\\",children:\\"Konsep 1: Turunan\\"})}),\\"\\\\n\\",e(r.p,{children:[a(r.strong,{children:\\"Definisi:\\"}),\\" Turunan mengukur laju perubahan fungsi terhadap perubahan variabel independen. Turunan fungsi ( f(x) ) dilambangkan sebagai ( f\'(x) ) atau (\\\\\\\\frac\\",\\").\\"]}),\\"\\\\n\\",a(r.p,{children:a(r.strong,{children:\\"Contoh Penggunaan Python:\\"})}),\\"\\\\n\\",e(r.p,{children:[\\"Untuk menghitung turunan suatu fungsi, kita dapat menggunakan pustaka \\",a(r.code,{children:\\"SymPy\\"}),\\" di Python. Mari kita contohkan dengan fungsi ( f(x) = 2x^2 + 3x + 1 ).\\"]}),\\"\\\\n\\",a(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:a(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",children:e(r.code,{\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Mengimpor pustaka SymPy\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sympy \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Membuat simbol variabel\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp.symbols(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\\"\'x\'\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menentukan fungsi\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"f \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 2\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"**\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 3\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menghitung turunan pertama\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"f_prime \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp.diff(f, x)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menampilkan hasil\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Turunan pertama dari f(x) adalah:\\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", f_prime)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"##\\"})})]})})}),\\"\\\\n\\",a(r.h2,{id:\\"konsep-2-integral-tak-tentu\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#konsep-2-integral-tak-tentu\\",children:\\"Konsep 2: Integral Tak Tentu\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Integral tak tentu adalah salah satu konsep penting dalam kalkulus. Integral ini merupakan operasi kebalikan dari turunan. Integral tak tentu dari sebuah fungsi (f(x)) dilambangkan sebagai (\\\\\\\\int f(x) , dx) dan menghasilkan fungsi lain yang, jika di-derivatifkan, akan menghasilkan (f(x)) kembali.\\"}),\\"\\\\n\\",a(r.p,{children:a(r.strong,{children:\\"Contoh Konsep Integral Tak Tentu:\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Misalkan kita memiliki fungsi (f(x) = 3x^2 + 2x + 4). Untuk menghitung integral tak tentu dari (f(x)), kita dapat menulisnya sebagai berikut:\\"}),\\"\\\\n\\",a(r.p,{children:\\"[\\\\n\\\\\\\\int (3x^2 + 2x + 4) , dx\\\\n]\\"}),\\"\\\\n\\",a(r.p,{children:\\"Kemudian, kita dapat menghitung integral tak tentu ini menggunakan Python dan pustaka SymPy:\\"}),\\"\\\\n\\",a(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:a(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",children:e(r.code,{\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Mengimpor pustaka SymPy\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sympy \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Membuat simbol variabel\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp.symbols(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\\"\'x\'\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menentukan fungsi\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"f \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 3\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"**\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 2\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 4\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menghitung integral tak tentu\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"integral \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp.integrate(f, x)\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menampilkan hasil\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Integral tak tentu dari f(x) adalah:\\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\", integral)\\"})]})]})})}),\\"\\\\n\\",a(r.h2,{id:\\"konsep-3-integral-tentu\\",children:a(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#konsep-3-integral-tentu\\",children:\\"Konsep 3: Integral Tentu\\"})}),\\"\\\\n\\",e(r.p,{children:[\\"Integral tentu adalah salah satu konsep penting dalam kalkulus yang digunakan untuk menghitung luas di bawah kurva fungsi antara dua batas tertentu. Integral tentu dari sebuah fungsi (f(x)) dalam interval ([a, b]) dilambangkan sebagai (\\\\\\\\int_\\",\\"^\\",\\" f(x) , dx) dan menghasilkan nilai numerik yang mewakili luas daerah di bawah kurva (f(x)) antara (x = a) dan (x = b).\\"]}),\\"\\\\n\\",a(r.p,{children:a(r.strong,{children:\\"Contoh Konsep Integral Tentu:\\"})}),\\"\\\\n\\",a(r.p,{children:\\"Misalkan kita ingin menghitung integral tentu dari fungsi (g(x) = 2x) dalam interval ([1, 5]):\\"}),\\"\\\\n\\",e(r.p,{children:[\\"[\\\\n\\\\\\\\int_\\",1,\\"^\\",5,\\" 2x , dx\\\\n]\\"]}),\\"\\\\n\\",a(r.p,{children:\\"Dengan menggunakan Python dan pustaka SymPy, kita dapat menghitung integral tentu ini:\\"}),\\"\\\\n\\",a(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:a(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",children:e(r.code,{\\"data-language\\":\\"python\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Mengimpor pustaka SymPy\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sympy \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Membuat simbol variabel\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp.symbols(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\\"\'x\'\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menentukan batas-batas integral\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"a \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"})]}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"b \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 5\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menentukan fungsi\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"g \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\" 2\\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"x\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menghitung integral tentu\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"definite_integral \\"}),a(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" sp.integrate(g, (x, a, b))\\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:a(r.span,{style:{color:\\"#6A737D\\"},children:\\"# Menampilkan hasil\\"})}),\\"\\\\n\\",e(r.span,{\\"data-line\\":\\"\\",children:[a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"print\\"}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"Integral tentu dari g(x) dari \'}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"{}\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" hingga \\"}),a(r.span,{style:{color:\\"#79B8FF\\"},children:\\"{}\\"}),a(r.span,{style:{color:\\"#9ECBFF\\"},children:\' adalah:\\"\'}),a(r.span,{style:{color:\\"#E1E4E8\\"},children:\\".format(a, b), definite_integral)\\"})]})]})})})]})}return{default:function(n={}){const{wrapper:e}=n.components||{};return e?a(e,{...n,children:a(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"mathematics_for_ai"},{"slug":"blog/median-two_leetcode","title":"Median of Two Sorted Arrays","description":"Solve the \\"Median of Two Sorted Arrays\\" problem efficiently using binary search in Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:n,jsx:l,jsxs:e}=arguments[0];function _createMdxContent(r){const s={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components};return e(n,{children:[l(s.h2,{id:\\"problem-statement\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",e(s.p,{children:[\\"Given two sorted arrays \\",l(s.code,{children:\\"nums1\\"}),\\" and \\",l(s.code,{children:\\"nums2\\"}),\\" of size \\",l(s.code,{children:\\"m\\"}),\\" and \\",l(s.code,{children:\\"n\\"}),\\" respectively, return the \\",l(s.strong,{children:\\"median\\"}),\\" of the two sorted arrays. The overall run-time complexity should be O(log (m+n)).\\"]}),\\"\\\\n\\",l(s.h3,{id:\\"example-1\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",l(s.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:l(s.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:e(s.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{children:\\"Input: `nums1 = [1, 3]`, `nums2 = [2]`\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{children:\\"Output: `2.00000`\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{children:\\"Explanation: Merged array = `[1, 2, 3]`, and the median is `2`.\\"})})]})})}),\\"\\\\n\\",l(s.h3,{id:\\"example-2\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",l(s.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:l(s.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:e(s.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{children:\\"Input: `nums1 = [1, 2]`, `nums2 = [3, 4]`\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{children:\\"Output: `2.50000`\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{children:\\"Explanation: Merged array = `[1, 2, 3, 4]`, and the median is `(2 + 3) / 2 = 2.5`.\\"})})]})})}),\\"\\\\n\\",l(s.h2,{id:\\"approach\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",e(s.p,{children:[\\"To solve the problem in O(log(m+n)) time complexity, we can avoid merging the two arrays and instead perform a \\",l(s.strong,{children:\\"binary search\\"}),\\". The key idea is to partition the arrays such that the left half contains smaller or equal elements, and the right half contains larger elements.\\"]}),\\"\\\\n\\",l(s.h3,{id:\\"algorithm\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",e(s.ol,{children:[\\"\\\\n\\",e(s.li,{children:[\\"Ensure that \\",l(s.code,{children:\\"nums1\\"}),\\" is the smaller of the two arrays (this makes the binary search range smaller).\\"]}),\\"\\\\n\\",e(s.li,{children:[\\"Use binary search on the smaller array \\",l(s.code,{children:\\"nums1\\"}),\\". We are trying to find a partition such that:\\",\\"\\\\n\\",e(s.ul,{children:[\\"\\\\n\\",e(s.li,{children:[\\"Elements to the left of the partition in \\",l(s.code,{children:\\"nums1\\"}),\\" and \\",l(s.code,{children:\\"nums2\\"}),\\" are less than or equal to elements on the right.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(s.li,{children:[\\"For each partition, check if it satisfies the conditions to calculate the median:\\",\\"\\\\n\\",e(s.ul,{children:[\\"\\\\n\\",l(s.li,{children:\\"If valid, the median is the average of the maximum element from the left half and the minimum element from the right half (for even total length). If odd, it\'s just the maximum element from the left half.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",l(s.h3,{id:\\"flowchart\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",l(s.p,{children:l(s.img,{src:\\"/leetcode/median_two.png\\",alt:\\"Flowchart of Median Two\\"})}),\\"\\\\n\\",l(s.h3,{id:\\"implementation-in-go\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",l(s.p,{children:\\"Here\'s the implementation of the solution using binary search:\\"}),\\"\\\\n\\",l(s.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:l(s.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:e(s.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),l(s.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\'}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),l(s.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// FindMedianSortedArray finds the median of two sorted arrays\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" FindMedianSortedArray\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),l(s.span,{style:{color:\\"#FFAB70\\"},children:\\"nums1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#FFAB70\\"},children:\\"nums2\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"float64\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1) \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums2) {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\treturn\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" FindMedianSortedArray\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums2, nums1) \\"}),l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// Ensure nums1 is the smaller array\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tlow, high \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1)\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tk \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" (\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1) \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums2) \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\">>\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),l(s.span,{style:{color:\\"#6A737D\\"},children:\\" // Midpoint calculation\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tvar\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid, nums2Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tfor\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" low \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"<=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" high {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tnums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" low \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" (high\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"low)\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\">>\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tnums2Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" k \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#6A737D\\"},children:\\"\\\\t\\\\t// Adjust binary search boundaries\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\tif\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" &&\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1[nums1Mid\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"] \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums2[nums2Mid] {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t\\\\thigh \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t} \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" if\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1) \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1[nums1Mid] \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums2[nums2Mid\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"] {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t\\\\tlow \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t} \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\t\\\\tbreak\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#6A737D\\"},children:\\"\\\\t// Finding midLeft and midRight\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tvar\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" midLeft, midRight \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tmidLeft \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums2[nums2Mid\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"]\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t} \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" if\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums2Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tmidLeft \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1[nums1Mid\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"]\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t} \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tmidLeft \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" Max\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1[nums1Mid\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"], nums2[nums2Mid\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"])\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" (\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1)\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums2))\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"%\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" ==\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\treturn\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" float64\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(midLeft) \\"}),l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// Odd number of elements, median is midLeft\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1) {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tmidRight \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums2[nums2Mid]\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t} \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" if\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums2Mid \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums2) {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tmidRight \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums1[nums1Mid]\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t} \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tmidRight \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" Min\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1[nums1Mid], nums2[nums2Mid])\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" float64\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(midLeft\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"midRight) \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"/\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\" 2\\"}),l(s.span,{style:{color:\\"#6A737D\\"},children:\\" // Even number of elements\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// Max returns the larger of two integers\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" Max\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),l(s.span,{style:{color:\\"#FFAB70\\"},children:\\"a\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#FFAB70\\"},children:\\"b\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" a \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" b {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\treturn\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" a\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" b\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// Min returns the smaller of two integers\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" Min\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),l(s.span,{style:{color:\\"#FFAB70\\"},children:\\"a\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#FFAB70\\"},children:\\"b\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" a \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" b {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\treturn\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" a\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" b\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tnums1 \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"{\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"3\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tnums2 \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"{\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"FindMedianSortedArray\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums1, nums2)) \\"}),l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 2.00000\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tnums3 \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"{\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tnums4 \\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),l(s.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"{\\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"3\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),l(s.span,{style:{color:\\"#79B8FF\\"},children:\\"4\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",e(s.span,{\\"data-line\\":\\"\\",children:[l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),l(s.span,{style:{color:\\"#B392F0\\"},children:\\"FindMedianSortedArray\\"}),l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums3, nums4)) \\"}),l(s.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 2.50000\\"})]}),\\"\\\\n\\",l(s.span,{\\"data-line\\":\\"\\",children:l(s.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})})]})})}),\\"\\\\n\\",l(s.h3,{id:\\"explanation\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",e(s.ol,{children:[\\"\\\\n\\",e(s.li,{children:[l(s.strong,{children:\\"Initial Setup\\"}),\\": Ensure nums1 is smaller than nums2 to keep the binary search range smaller. We calculate the total middle index k and begin the binary search.\\"]}),\\"\\\\n\\",e(s.li,{children:[l(s.strong,{children:\\"Binary Search\\"}),\\": In each iteration, we partition nums1 and nums2 and check if the partition is valid. We adjust the low and high pointers until we find the correct partition.\\"]}),\\"\\\\n\\",e(s.li,{children:[l(s.strong,{children:\\"Median Calculation\\"}),\\": Once the partition is valid, we compute midLeft and midRight (the two middle elements) and return the median.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",l(s.h3,{id:\\"time-and-space-complexity\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",e(s.ol,{children:[\\"\\\\n\\",e(s.li,{children:[l(s.strong,{children:\\"Time Complexity\\"}),\\": The algorithm runs in O(log(min(m, n))) where m and n are the lengths of the two input arrays. We perform binary search on the smaller array.\\"]}),\\"\\\\n\\",e(s.li,{children:[l(s.strong,{children:\\"Space Complexity\\"}),\\": O(1), as no additional space is required beyond a few variables.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",l(s.h2,{id:\\"conclusion\\",children:l(s.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",l(s.p,{children:\\"This solution efficiently solves the problem of finding the median of two sorted arrays in logarithmic time by using binary search, making it suitable for large arrays with different sizes. The algorithm ensures optimal time complexity by focusing on the smaller array in the binary search process.\\"})]})}return{default:function(n={}){const{wrapper:e}=n.components||{};return e?l(e,{...n,children:l(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"median-two_leetcode"},{"slug":"blog/palingdrome_leetcode","title":"Palindrome Number","description":"Learn how to efficiently solve the Palindrome Number problem in Go, using simple arithmetic.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:e,jsx:n,jsxs:l}=arguments[0];function _createMdxContent(r){const i={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components};return l(e,{children:[n(i.h2,{id:\\"problem-statement\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",l(i.p,{children:[\\"Given an integer \\",n(i.code,{children:\\"x\\"}),\\", return \\",n(i.code,{children:\\"true\\"}),\\" if \\",n(i.code,{children:\\"x\\"}),\\" is a palindrome, and \\",n(i.code,{children:\\"false\\"}),\\" otherwise.\\"]}),\\"\\\\n\\",l(i.p,{children:[\\"A palindrome is a number that reads the same forward and backward. For example, \\",n(i.code,{children:\\"121\\"}),\\" is a palindrome because it reads as \\",n(i.code,{children:\\"121\\"}),\\" from both directions.\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"example-1\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Input\\"}),\\": \\",n(i.code,{children:\\"x = 121\\"})]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Output\\"}),\\": \\",n(i.code,{children:\\"true\\"})]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Explanation\\"}),\\": 121 reads as 121 from left to right and from right to left.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"example-2\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Input\\"}),\\": \\",n(i.code,{children:\\"x = -121\\"})]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Output\\"}),\\": \\",n(i.code,{children:\\"false\\"})]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Explanation\\"}),\\": The number -121 reads 121- from right to left, which is not the same.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"example-3\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-3\\",children:\\"Example 3:\\"})}),\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Input\\"}),\\": \\",n(i.code,{children:\\"x = 10\\"})]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Output\\"}),\\": \\",n(i.code,{children:\\"false\\"})]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Explanation\\"}),\\": 10 reads as 01 when reversed, which is not a palindrome.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"constraints\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#constraints\\",children:\\"Constraints:\\"})}),\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.code,{children:\\"-2^31 <= x <= 2^31 - 1\\"}),\\" (32-bit signed integer)\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h2,{id:\\"approach\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",n(i.h3,{id:\\"algorithm\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Negative Check\\"}),\\": If the number is negative, it is not a palindrome because negative signs only appear on one side.\\"]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Zero and Last-Digit Check\\"}),\\": If the number ends in \\",n(i.code,{children:\\"0\\"}),\\" but is not \\",n(i.code,{children:\\"0\\"}),\\" itself, it cannot be a palindrome. For example, \\",n(i.code,{children:\\"10\\"}),\\" is not a palindrome.\\"]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Revert Half of the Number\\"}),\\":\\",\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",n(i.li,{children:\\"Reverse the second half of the integer and compare it to the first half. If they are equal, then the number is a palindrome.\\"}),\\"\\\\n\\",l(i.li,{children:[\\"For instance, for \\",n(i.code,{children:\\"x = 121\\"}),\\", after reversing the last half (\\",n(i.code,{children:\\"21\\"}),\\" becomes \\",n(i.code,{children:\\"12\\"}),\\"), it can be compared with the first half.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"implementation-in-go\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",n(i.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(i.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(i.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),n(i.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\'}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),n(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// isPalindrome checks if a given integer x is a palindrome\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\" isPalindrome\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#FFAB70\\"},children:\\"x\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"bool\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"    if\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" ||\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" (x\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"%\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" ==\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" &&\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\") {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"        return\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" false\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    revertedNumber \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" revertedNumber {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        revertedNumber \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" revertedNumber\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"%\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"/=\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 10\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"    return\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" revertedNumber \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"||\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" revertedNumber\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"/\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"isPalindrome\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"121\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))  \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: true\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"isPalindrome\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"121\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\")) \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: false\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"isPalindrome\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))   \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: false\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",n(i.h3,{id:\\"explanation\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",n(i.li,{children:\\"Step 1: We first check if x is negative or if it ends with a zero (except when x is 0). If either of these conditions is true, we return false immediately.\\"}),\\"\\\\n\\",n(i.li,{children:\\"Step 2: We then reverse half of the digits of x. This is done by extracting the last digit (using x % 10), appending it to the reversed number, and removing the last digit from x (using x /= 10).\\"}),\\"\\\\n\\",n(i.li,{children:\\"Step 3: We continue this process until the reversed number is equal to or greater than x. This tells us we\'ve processed half of the digits. If the remaining part of x equals the reversed number, or if ignoring the middle digit (for odd-length numbers) results in equality, then the number is a palindrome.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"time-and-space-complexity\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Time Complexity\\"}),\\": O(log₁₀(n)), where n is the input number. We reduce x by one digit in every loop iteration, so the time complexity is proportional to the number of digits in x.\\"]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Space Complexity\\"}),\\": O(1). We use a constant amount of space for variables like revertedNumber and x.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h2,{id:\\"conclusion\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",n(i.p,{children:\\"This solution efficiently checks if an integer is a palindrome by reversing half of the number and comparing it with the other half. It avoids the need for extra space (like converting the integer into a string) and handles edge cases such as negative numbers and integers that end in zeros.\\"})]})}return{default:function(e={}){const{wrapper:l}=e.components||{};return l?n(l,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"palingdrome_leetcode"},{"slug":"blog/reverse-integer_leetcode","title":"Reverse Integer","description":"Solve the \\"Reverse Integer\\" problem efficiently using Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:e,jsx:n,jsxs:l}=arguments[0];function _createMdxContent(r){const i={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components};return l(e,{children:[n(i.h2,{id:\\"problem-statement\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",l(i.p,{children:[\\"Given a signed 32-bit integer \\",n(i.code,{children:\\"x\\"}),\\", return \\",n(i.code,{children:\\"x\\"}),\\" with its digits reversed. If reversing \\",n(i.code,{children:\\"x\\"}),\\" causes the value to go outside the signed 32-bit integer range ([-2^\\",31,\\", 2^\\",31,\\" - 1]), then return \\",n(i.code,{children:\\"0\\"}),\\".\\"]}),\\"\\\\n\\",n(i.p,{children:\\"Assume the environment does not allow you to store 64-bit integers (signed or unsigned).\\"}),\\"\\\\n\\",n(i.h3,{id:\\"example-1\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",n(i.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(i.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(i.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{children:\\"Input: `x = 123`  \\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{children:\\"Output: `321`\\"})})]})})}),\\"\\\\n\\",n(i.h3,{id:\\"example-2\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",n(i.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(i.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(i.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{children:\\"Input: `x = -123`  \\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{children:\\"Output: `-321`\\"})})]})})}),\\"\\\\n\\",n(i.h3,{id:\\"example-3\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-3\\",children:\\"Example 3:\\"})}),\\"\\\\n\\",n(i.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(i.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(i.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{children:\\"Input: `x = 120`  \\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{children:\\"Output: `21`\\"})})]})})}),\\"\\\\n\\",n(i.h3,{id:\\"constraints\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#constraints\\",children:\\"Constraints:\\"})}),\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",l(i.li,{children:[\\"(-2^\\",31,\\" \\\\\\\\leq x \\\\\\\\leq 2^\\",31,\\" - 1)\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h2,{id:\\"approach\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",n(i.p,{children:\\"To solve this problem, we can follow these steps:\\"}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Handle Edge Cases\\"}),\\": Check if the input integer is \\",n(i.code,{children:\\"0\\"}),\\" since the reverse of \\",n(i.code,{children:\\"0\\"}),\\" is \\",n(i.code,{children:\\"0\\"}),\\".\\"]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Reversing Digits\\"}),\\": Use a loop to extract digits from the integer and build the reversed integer.\\"]}),\\"\\\\n\\",l(i.li,{children:[n(i.strong,{children:\\"Overflow Check\\"}),\\": Before appending each digit, check if the resulting integer would overflow the 32-bit integer limit.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"algorithm\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[\\"Initialize a variable \\",n(i.code,{children:\\"res\\"}),\\" to store the reversed integer as an \\",n(i.code,{children:\\"int64\\"}),\\" to handle overflow checking.\\"]}),\\"\\\\n\\",l(i.li,{children:[\\"Extract the last digit of \\",n(i.code,{children:\\"x\\"}),\\" using the modulo operator.\\"]}),\\"\\\\n\\",l(i.li,{children:[\\"Update \\",n(i.code,{children:\\"res\\"}),\\" by multiplying the current value by \\",n(i.code,{children:\\"10\\"}),\\" and adding the extracted digit.\\"]}),\\"\\\\n\\",l(i.li,{children:[\\"Check for overflow conditions after each update of \\",n(i.code,{children:\\"res\\"}),\\".\\"]}),\\"\\\\n\\",l(i.li,{children:[\\"Reduce \\",n(i.code,{children:\\"x\\"}),\\" by dividing it by \\",n(i.code,{children:\\"10\\"}),\\".\\"]}),\\"\\\\n\\",n(i.li,{children:\\"Continue until all digits have been processed.\\"}),\\"\\\\n\\",l(i.li,{children:[\\"If no overflow occurs, return the final result as an \\",n(i.code,{children:\\"int\\"}),\\".\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h3,{id:\\"flowchart\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",n(i.p,{children:n(i.img,{src:\\"/leetcode/reverse_integer.png\\",alt:\\"Flowchart of Reverse Integer\\"})}),\\"\\\\n\\",n(i.h3,{id:\\"implementation-in-go\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",n(i.p,{children:\\"Here\'s how you can implement this algorithm in Go:\\"}),\\"\\\\n\\",n(i.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(i.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(i.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" (\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\\\t\\"\'}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"math\\"}),n(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\\\t\\"\'}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),n(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// reverse reverses the digits of the integer x\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\" reverse\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#FFAB70\\"},children:\\"x\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tif\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\treturn\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tvar\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" res \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"int64\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\tfor\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" x \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"!=\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tres \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" res\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" int64\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(x\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"%\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\tif\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" res \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" math.MaxInt32 \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"||\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" res \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" math.MinInt32 {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\t\\\\t\\\\treturn\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\t}\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t\\\\tx \\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"/=\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 10\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\t}\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"\\\\treturn\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(res)\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"reverse\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"123\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))   \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 321\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"reverse\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"123\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))  \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: -321\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"reverse\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"120\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))   \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 21\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"\\\\tfmt.\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#B392F0\\"},children:\\"reverse\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),n(i.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))     \\"}),n(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 0\\"})]}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:n(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",n(i.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",n(i.h3,{id:\\"explanation\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",n(i.li,{children:\\"The function starts by checking if the input x is 0. If so, it returns 0.\\\\nA loop runs as long as x is not 0, extracting the last digit and building the reversed number.\\"}),\\"\\\\n\\",n(i.li,{children:\\"The check for overflow is done using the math.MaxInt32 and math.MinInt32 constants to ensure that the resulting value fits within the 32-bit signed integer range.\\"}),\\"\\\\n\\",n(i.li,{children:\\"The extracted digits are accumulated in res which is declared as an int64 to prevent overflow during the accumulation process.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(i.h2,{id:\\"conclusion\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",n(i.p,{children:\\"This approach effectively reverses the digits of a signed 32-bit integer while handling potential overflow issues. The solution efficiently utilizes basic arithmetic operations and control structures to achieve the desired result.\\"})]})}return{default:function(e={}){const{wrapper:l}=e.components||{};return l?n(l,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"reverse-integer_leetcode"},{"slug":"blog/string-integer_leetcode","title":"String to Integer (atoi)","description":"Solve the \\"String to Integer (atoi)\\" problem efficiently using Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:n,jsx:e,jsxs:l}=arguments[0];function _createMdxContent(r){const i={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components};return l(n,{children:[e(i.h2,{id:\\"problem-statement\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",l(i.p,{children:[\\"The problem requires implementing the \\",e(i.code,{children:\\"myAtoi\\"}),\\" function, which converts a string to a 32-bit signed integer. The algorithm should handle several cases:\\"]}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",e(i.li,{children:\\"Ignore any leading whitespace.\\"}),\\"\\\\n\\",e(i.li,{children:\\"Determine the sign based on the presence of a \'+\' or \'-\' sign.\\"}),\\"\\\\n\\",e(i.li,{children:\\"Convert the digits until a non-digit is encountered or the string ends.\\"}),\\"\\\\n\\",e(i.li,{children:\\"If the converted integer is out of the 32-bit signed integer range, round it to the nearest boundary value.\\"}),\\"\\\\n\\",e(i.li,{children:\\"Return the integer result.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",e(i.h3,{id:\\"constraints\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#constraints\\",children:\\"Constraints\\"})}),\\"\\\\n\\",l(i.ul,{children:[\\"\\\\n\\",l(i.li,{children:[\\"The input string \\",e(i.code,{children:\\"s\\"}),\\" may contain letters, digits, whitespace, and symbols like \'+\' or \'-\'.\\"]}),\\"\\\\n\\",l(i.li,{children:[\\"If no valid conversion is found, return \\",e(i.code,{children:\\"0\\"}),\\".\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(i.h2,{id:\\"approach\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",e(i.p,{children:\\"To solve this problem, we can break down the task into clear steps:\\"}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Whitespace handling:\\"}),\\" The string should ignore leading spaces.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Signedness determination:\\"}),\\" Identify if the number is positive or negative.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Conversion logic:\\"}),\\" Read the digits and build the integer.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Boundary check:\\"}),\\" Ensure the result remains within the 32-bit integer range.\\"]}),\\"\\\\n\\",e(i.li,{children:e(i.strong,{children:\\"Return the result.\\"})}),\\"\\\\n\\"]}),\\"\\\\n\\",e(i.h3,{id:\\"algorithm\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Skip whitespace:\\"}),\\" Iterate through the string to skip leading spaces.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Detect the sign:\\"}),\\" Look for a \'+\' or \'-\' to determine if the number is positive or negative.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Build the integer:\\"}),\\" Continue reading digits until a non-digit is found or the end of the string is reached. Multiply the result by \\",e(i.code,{children:\\"10\\"}),\\" as new digits are read.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Overflow detection:\\"}),\\" If the resulting integer exceeds the 32-bit signed integer boundaries (\\",e(i.code,{children:\\"-2^31\\"}),\\" to \\",e(i.code,{children:\\"2^31 - 1\\"}),\\"), return the boundary value.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(i.h3,{id:\\"flowchart\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",e(i.p,{children:e(i.img,{src:\\"/leetcode/atoi.png\\",alt:\\"Flowchart of Atoi\\"})}),\\"\\\\n\\",e(i.h3,{id:\\"implementation-in-go\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",e(i.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(i.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(i.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" (\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'    \\"\'}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'    \\"\'}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"math\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'    \\"\'}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"unicode\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"const\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" maxDiv10 \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" math.MaxInt32 \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"/\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 10\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#6A737D\\"},children:\\"// myAtoi converts a string to a 32-bit signed integer\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\" myAtoi\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#FFAB70\\"},children:\\"s\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\" string\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    i, n \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"len\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s)\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#6A737D\\"},children:\\"    // Skip leading whitespaces\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" n \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" unicode.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"IsSpace\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"rune\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s[i])) {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        i\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"++\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#6A737D\\"},children:\\"    // Handle sign\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    sign \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"    if\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" n \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" s[i] \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\\" \'\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\"+\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\\"\'\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        i\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"++\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    } \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\" if\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" n \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" s[i] \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\\" \'\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\"-\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\\"\'\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        sign \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\" -\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        i\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"++\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#6A737D\\"},children:\\"    // Convert digits into an integer\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    num \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" n \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" unicode.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"IsDigit\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"rune\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s[i])) {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        digit \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s[i] \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\\" \'\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\\"\'\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        \\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#6A737D\\"},children:\\"        // Handle overflow/underflow\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" num \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\">\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" maxDiv10 \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"||\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" (num \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" maxDiv10 \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"&&\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" digit \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\">=\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 8\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\") {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"            if\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" sign \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"                return\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" math.MaxInt32\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"            }\\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"            return\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" math.MinInt32\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        \\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        num \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" num\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),e(i.span,{style:{color:\\"#79B8FF\\"},children:\\"10\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" digit\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"        i\\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"++\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"    return\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" sign \\"}),e(i.span,{style:{color:\\"#F97583\\"},children:\\"*\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\" num\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"myAtoi\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"42\\"\'}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))           \\"}),e(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 42\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"myAtoi\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"   -42\\"\'}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))       \\"}),e(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: -42\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"myAtoi\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"4193 with words\\"\'}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\")) \\"}),e(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 4193\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"myAtoi\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"words and 987\\"\'}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))   \\"}),e(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: 0\\"})]}),\\"\\\\n\\",l(i.span,{\\"data-line\\":\\"\\",children:[e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#B392F0\\"},children:\\"myAtoi\\"}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(i.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"-91283472332\\"\'}),e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"))    \\"}),e(i.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: -2147483648\\"})]}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:e(i.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(i.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",e(i.h3,{id:\\"explanation\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Whitespace Handling\\"}),\\": The function skips any leading spaces using a for loop and unicode.IsSpace to ensure it processes the string correctly.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Sign Detection\\"}),\\": If the next character is a \'+\' or \'-\', it updates the sign variable accordingly.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Integer Construction\\"}),\\": The function iterates over the digits, converting them into an integer by multiplying the previous result by 10 and adding the current digit.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Overflow Handling\\"}),\\": To avoid overflow, the function checks whether the current number exceeds the maximum 32-bit signed integer (2^31 - 1). If an overflow is detected, it returns math.MaxInt32 for positive numbers or math.MinInt32 for negative ones.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(i.h3,{id:\\"time-and-space-complexity\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(i.ol,{children:[\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Time Complexity\\"}),\\": O(n) where n is the length of the input string. The algorithm scans the string once to convert it to an integer.\\"]}),\\"\\\\n\\",l(i.li,{children:[e(i.strong,{children:\\"Space Complexity\\"}),\\": O(1) since we only use a constant amount of extra space to store variables like sign and num.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(i.h2,{id:\\"conclusion\\",children:e(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",e(i.p,{children:\\"This implementation of myAtoi efficiently converts a string to a 32-bit signed integer, accounting for potential edge cases like whitespaces, signs, non-digit characters, and overflow. The algorithm operates in linear time and uses constant space, making it well-suited for handling the problem within the constraints provided.\\"})]})}return{default:function(n={}){const{wrapper:l}=n.components||{};return l?e(l,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"string-integer_leetcode"},{"slug":"blog/two-sum_leetcode","title":"Two Sum Leetcode","description":"Solve the \\"Two Sum\\" problem efficiently using hash maps in Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","java","typescript","rust","algorithms"],"body":"const{Fragment:n,jsx:e,jsxs:l}=arguments[0];function _createMdxContent(r){const a={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h1:\\"h1\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components};return l(n,{children:[e(a.h1,{id:\\"two-sum-in-go\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#two-sum-in-go\\",children:\\"Two Sum in Go\\"})}),\\"\\\\n\\",l(a.p,{children:[\'The \\"Two Sum\\" problem is a popular coding challenge often encountered in technical interviews. The task is simple: given an array of integers \',e(a.code,{children:\\"nums\\"}),\\" and a target integer, find two numbers in \\",e(a.code,{children:\\"nums\\"}),\\" such that they add up to the target. You need to return their indices, and each problem has exactly one solution.\\"]}),\\"\\\\n\\",l(a.p,{children:[\\"In this article, we will explore how to solve this problem efficiently using a \\",e(a.strong,{children:\\"hash map\\"}),\\" in Go, achieving a time complexity of \\",e(a.strong,{children:\\"O(n)\\"}),\\".\\"]}),\\"\\\\n\\",e(a.h2,{id:\\"problem-statement\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",l(a.p,{children:[\\"You are given an array of integers \\",e(a.code,{children:\\"nums\\"}),\\" and an integer \\",e(a.code,{children:\\"target\\"}),\\". The task is to return the indices of the two numbers such that they add up to the target. You may assume that each input would have exactly one solution, and you cannot use the same element twice.\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"example-1\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Input: nums = [2,7,11,15], target = 9\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Output: [0,1]\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].\\"})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"example-2\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Input: nums = [3,2,4], target = 6\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Output: [1,2]\\"})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"example-3\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-3\\",children:\\"Example 3\\"})}),\\"\\\\n\\",e(a.pre,{children:e(a.code,{children:\\"Input: nums = [3,3], target = 6\\\\nOutput: [0,1]\\\\n\\"})}),\\"\\\\n\\",e(a.h2,{id:\\"approach\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",e(a.h3,{id:\\"using-a-hash-map-for-on-time-complexity\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#using-a-hash-map-for-on-time-complexity\\",children:\\"Using a Hash Map for O(n) Time Complexity\\"})}),\\"\\\\n\\",e(a.p,{children:\\"The brute force solution would involve a nested loop to check all pairs of numbers, leading to a time complexity of O(n\xb2). However, we can improve this to O(n) using a hash map (or dictionary).\\"}),\\"\\\\n\\",e(a.h3,{id:\\"algorithm\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(a.ol,{children:[\\"\\\\n\\",e(a.li,{children:\\"Initialize a map: We use a hash map to store each number we encounter along with its index.\\"}),\\"\\\\n\\",e(a.li,{children:\\"Iterate through the array: For each element nums[i], calculate the complement as target - nums[i].\\"}),\\"\\\\n\\",e(a.li,{children:\\"Check the map: If the complement is already in the map, we\'ve found the two numbers that add up to the target.\\"}),\\"\\\\n\\",e(a.li,{children:\\"Return the result: Once the solution is found, return the indices of the two numbers.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"flowchart\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"Flowchart\\"})}),\\"\\\\n\\",e(a.p,{children:e(a.img,{src:\\"/leetcode/two_sum.png\\",alt:\\"Flowchart of Two Sum Algorithm\\"})}),\\"\\\\n\\",e(a.h3,{id:\\"implementation-in-go\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\'}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" TwoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"nums\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"target\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") []\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    m \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" make\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"map\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"]\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Initialize the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums); i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        another \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" target \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums[i] \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Calculate the complement\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"        // Check if the complement exists in the map\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" idx, ok \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" m[another]; ok {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"            return\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"{idx, i} \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Return the two indices\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        m[nums[i]] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Store the current number and its index in the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    return\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" nil\\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\" // This line won\'t be reached as per the problem constraints\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    nums \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" []\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"{\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"7\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"11\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"15\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    target \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 9\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    result \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" TwoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums, target)\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(result) \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: [0, 1]\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"implementation-in-java\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-java\\",children:\\"Implementation in Java\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"java\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"java\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" java.util.HashMap;\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" java.util.Map;\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"public\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" class\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" TwoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    public\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" static\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] \\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"twoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"nums\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\" target\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        Map<\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"Integer\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"Integer\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"> map \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" new\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" HashMap<>(); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Initialize the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        for\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" (\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums.length; i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"            int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" complement \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" target \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums[i]; \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Calculate the complement\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"            // Check if the complement exists in the map\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"            if\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" (map.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"containsKey\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(complement)) {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"                return\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" new\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] { map.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"get\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(complement), i }; \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Return the two indices\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"            }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"            map.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"put\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums[i], i); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Store the current number and its index in the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        throw\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" new\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" IllegalArgumentException\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"No two sum solution\\"\'}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// This line won\'t be reached as per the problem constraints\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    public\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" static\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" void\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"String\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"args\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] nums \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"7\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"11\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"15\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"};\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" target \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 9\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\";\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] result \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" twoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums, target);\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        System.out.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"[\\"\'}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" result[\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\", \\"\'}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" +\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" result[\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"]\\"\'}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: [0, 1]\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"implementation-in-typescript\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-typescript\\",children:\\"Implementation In Typescript\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"typescript\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"typescript\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"function\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" twoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"nums\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[], \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"target\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\")\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    const\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" map\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Map\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"> \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" new\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Map\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Initialize the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" (\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"let\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums.\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"length\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        const\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" complement\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" =\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" target \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums[i]; \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Calculate the complement\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"        // Check if the complement exists in the map\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" (map.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"has\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(complement)) {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"            return\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" [map.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"get\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(complement) \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", i]; \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Return the two indices\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        map.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"set\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums[i], i); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Store the current number and its index in the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    throw\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" new\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Error\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"No two sum solution\\"\'}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// This line won\'t be reached as per the problem constraints\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Example usage\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"const\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" nums\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" [\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"2\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"7\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"11\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"15\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"];\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"const\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" target\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" =\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 9\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\";\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"const\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" result\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" number\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" twoSum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums, target);\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"console.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"log\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(result); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Output: [0, 1]\\"})]})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"implementation-in-rust\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-rust\\",children:\\"Implementation In Rust\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"rust\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"rust\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"use\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" std\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"::\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"collections\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"::\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"HashMap\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\";\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"impl\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Solution\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    pub\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" fn\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" two_sum\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(nums\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Vec\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"i32\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\">, target\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" i32\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"->\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Vec\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"i32\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"> {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        let\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" mut\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" map \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" HashMap\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"::\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"new\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Initialize the HashMap\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        for\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" (i, \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"&\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"num) \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"in\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" nums\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\".\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"iter\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"()\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\".\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"enumerate\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"            let\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" another \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" target \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" num; \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Calculate the complement\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"            // Check if the complement exists in the map\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"            if\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" let\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" Some\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"&\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"idx) \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" map\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\".\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"get\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"&\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"another) {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"                return\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" vec!\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[idx \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" i32\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"as\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" i32\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"]; \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Return the two indices\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"            }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"            map\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\".\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"insert\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(num, i); \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Store the current number and its index in the map\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#B392F0\\"},children:\\"        vec!\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"[] \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// Return an empty vector if no solution is found\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"} \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// \\"})]})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"explanation\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(a.ul,{children:[\\"\\\\n\\",e(a.li,{children:\\"We initialize a map m where the key is the number and the value is its index.\\"}),\\"\\\\n\\",e(a.li,{children:\\"For each element in nums, we compute the complement (target - nums[i]).\\\\nIf the complement is found in the map, we return the indices of the two numbers.\\"}),\\"\\\\n\\",e(a.li,{children:\\"If the complement is not found, we store the current number and its index in the map for future lookup.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"time-and-space-complexity\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(a.ul,{children:[\\"\\\\n\\",e(a.li,{children:\\"Time Complexity: O(n) – We only pass through the array once.\\"}),\\"\\\\n\\",e(a.li,{children:\\"Space Complexity: O(n) – In the worst case, we store all the numbers in the hash map.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h2,{id:\\"conclusion\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",e(a.p,{children:\\"Using a hash map allows us to solve the Two Sum problem in linear time, making it an efficient solution for large inputs. This approach is optimal and widely used in coding interviews.\\"}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Input: nums = [3,2,4], target = 6\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Output: [1,2]\\"})})]})})})]})}return{default:function(n={}){const{wrapper:l}=n.components||{};return l?e(l,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"two-sum_leetcode"},{"slug":"blog/ziz-zag-1_leetcode","title":"Zigzag Conversion","description":"Solve the \\"Zigzag Conversion\\" problem efficiently in Go.","date":"2024-09-28T00:00:00.000Z","published":true,"tags":["leetcode","golang","algorithms"],"body":"const{Fragment:n,jsx:e,jsxs:l}=arguments[0];function _createMdxContent(r){const a={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",img:\\"img\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",...r.components};return l(n,{children:[e(a.h2,{id:\\"problem-statement\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#problem-statement\\",children:\\"Problem Statement\\"})}),\\"\\\\n\\",e(a.p,{children:\'The string \\"PAYPALISHIRING\\" is written in a zigzag pattern on a given number of rows. The following is the zigzag representation for the string with 3 rows:\'}),\\"\\\\n\\",e(a.h3,{id:\\"example-1\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-1\\",children:\\"Example 1:\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Input: s = \\"PAYPALISHIRING\\", numRows = 3\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Output: \\"PAHNAPLSIIGYIR\\"\'})})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"example-2\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#example-2\\",children:\\"Example 2:\\"})}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Input: s = \\"PAYPALISHIRING\\", numRows = 4\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Output: \\"PINALSIGYAHRPI\\"\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Explanation:\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"P     I    N\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"A   L S  I G\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"Y A   H R\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\\"P     I\\"})})]})})}),\\"\\\\n\\",e(a.p,{children:\\"Example 3:\\"}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"plaintext\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Input: s = \\"A\\", numRows = 1\'})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{children:\'Output: \\"A\\"\'})})]})})}),\\"\\\\n\\",e(a.h2,{id:\\"approach\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#approach\\",children:\\"Approach\\"})}),\\"\\\\n\\",e(a.p,{children:\\"To convert the string into a zigzag pattern, we will use a list of strings to represent each row of the zigzag. We will iterate through the input string and determine which row the current character belongs to, toggling between moving downwards and upwards in the zigzag.\\"}),\\"\\\\n\\",e(a.h3,{id:\\"algorithm\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#algorithm\\",children:\\"Algorithm\\"})}),\\"\\\\n\\",l(a.ol,{children:[\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Initialize Rows\\"}),\\": Create a slice of strings to hold each row\'s characters.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Iterate Through the String\\"}),\\": For each character in the string, append it to the appropriate row.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Determine Direction\\"}),\\": Keep track of the current row and the direction (down or up) to determine the next row index.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Construct the Result\\"}),\\": Concatenate all rows to form the final string.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"flowchart\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#flowchart\\",children:\\"FlowChart\\"})}),\\"\\\\n\\",e(a.p,{children:e(a.img,{src:\\"/leetcode/ziz_zag.png\\",alt:\\"Flowchart of Ziz Zag Conversion\\"})}),\\"\\\\n\\",e(a.h3,{id:\\"implementation-in-go\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation-in-go\\",children:\\"Implementation in Go\\"})}),\\"\\\\n\\",e(a.p,{children:\\"Here is the Go implementation of the solution:\\"}),\\"\\\\n\\",e(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:e(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"go\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"package\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"import\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\'}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"fmt\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"\'})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"// convert converts the input string to its zigzag representation based on the number of rows\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" convert\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"s\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#FFAB70\\"},children:\\"numRows\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" int\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\") \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    if\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" numRows \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        return\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" s\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    rows \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" make\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"([]\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", numRows)\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    currentRow \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    direction \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\\" // 1 for down, -1 for up\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" len\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s); i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        rows[currentRow] \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+=\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" string\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(s[i])\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        \\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#6A737D\\"},children:\\"        // Change direction at the top and bottom rows\\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"        if\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" currentRow \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"            direction \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 1\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        } \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"else\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" if\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" currentRow \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"==\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" numRows\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"-\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"            direction \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\" -\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        \\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        currentRow \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" direction\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    result \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\' \\"\\"\'})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    for\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\":=\\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\" 0\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"; i \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"<\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" numRows; i\\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"++\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        result \\"}),e(a.span,{style:{color:\\"#F97583\\"},children:\\"+=\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" rows[i]\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    }\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    \\"})}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"    return\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\" result\\"})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#F97583\\"},children:\\"func\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\" main\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"() {\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"convert\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"PAYPALISHIRING\\"\'}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"3\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\")) \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\'// Output: \\"PAHNAPLSIIGYIR\\"\'})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"convert\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"PAYPALISHIRING\\"\'}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"4\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\")) \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\'// Output: \\"PINALSIGYAHRPI\\"\'})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"    fmt.\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"Println\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#B392F0\\"},children:\\"convert\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"(\\"}),e(a.span,{style:{color:\\"#9ECBFF\\"},children:\'\\"A\\"\'}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\", \\"}),e(a.span,{style:{color:\\"#79B8FF\\"},children:\\"1\\"}),e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"))               \\"}),e(a.span,{style:{color:\\"#6A737D\\"},children:\'// Output: \\"A\\"\'})]}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:e(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"}\\"})}),\\"\\\\n\\",e(a.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",e(a.h3,{id:\\"explanation\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation\\",children:\\"Explanation\\"})}),\\"\\\\n\\",l(a.ol,{children:[\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Initialization\\"}),\\": The function initializes a slice of strings called rows to hold the characters for each row. It also tracks the currentRow and direction of movement.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Character Placement\\"}),\\": As we loop through the characters in the string, we append each character to the corresponding row based on the current row index.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Direction Control\\"}),\\": The direction toggles between downward and upward as we reach the first and last rows.\\"]}),\\"\\\\n\\",l(a.li,{children:[e(a.strong,{children:\\"Result Construction\\"}),\\": Finally, we concatenate the strings from all rows to form the output.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",e(a.h3,{id:\\"time-and-space-complexity\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#time-and-space-complexity\\",children:\\"Time and Space Complexity\\"})}),\\"\\\\n\\",l(a.p,{children:[e(a.strong,{children:\\"Time Complexity\\"}),\\": O(n), where n is the length of the input string, since we visit each character exactly once.\\\\n\\",e(a.strong,{children:\\"Space Complexity\\"}),\\": O(n), for storing the characters in the rows.\\"]}),\\"\\\\n\\",e(a.h2,{id:\\"conclusion\\",children:e(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:\\"Conclusion\\"})}),\\"\\\\n\\",e(a.p,{children:\\"This solution efficiently converts a string to its zigzag representation in a specified number of rows, leveraging simple string manipulations and an understanding of the zigzag pattern. The algorithm operates within linear time complexity, making it suitable for longer strings.\\"})]})}return{default:function(n={}){const{wrapper:l}=n.components||{};return l?e(l,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"ziz-zag-1_leetcode"}]'),i=l(5257),s=l(4189),t=l(9213),c=l(7815),o=l(1657),d=l(2265),h=l(7907);let p=e=>{let{setCurrentPage:n}=e,l=(0,h.useSearchParams)();return(0,d.useEffect)(()=>{n(Number(l.get("page"))||1)},[l,n]),null};function E(){let e=(0,h.useRouter)(),[n,l]=(0,d.useState)(1),[E,y]=(0,d.useState)(""),u=(0,d.useMemo)(()=>(0,o.O2)(r.filter(e=>e.published)),[]),g=(0,d.useMemo)(()=>Math.ceil(u.length/5),[u]),m=(0,d.useMemo)(()=>(0,o.Ys)(r),[]),F=(0,d.useMemo)(()=>(0,o.Fs)(m),[m]),f=(0,d.useMemo)(()=>u.slice(5*(n-1),5*n),[u,n]),b=(0,d.useMemo)(()=>f.filter(e=>e.title.toLowerCase().includes(E.toLowerCase())),[f,E]);return(0,a.jsxs)(d.Suspense,{fallback:(0,a.jsx)("div",{children:"Loading..."}),children:[(0,a.jsx)(p,{setCurrentPage:l}),(0,a.jsxs)("div",{className:"container max-w-4xl py-6 lg:py-10",children:[(0,a.jsx)("div",{className:"flex flex-col items-start gap-4 md:flex-row md:justify-between md:gap-8",children:(0,a.jsxs)("div",{className:"flex-1 space-y-4",children:[(0,a.jsx)("h1",{className:"inline-block font-black text-4xl lg:text-5xl text-[#585a5c] dark:text-slate-200",children:"Blog"}),(0,a.jsx)("p",{className:"text-xl text-muted-foreground text-[#585a5c] dark:text-slate-200",children:"My thoughts and experiments on everything web development—backend, frontend, and a touch of machine learning."}),(0,a.jsx)("input",{type:"text",placeholder:"Search by title...",value:E,onChange:e=>y(e.target.value),className:"mt-10 p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-[rgb(124,58,237)]"})]})}),(0,a.jsxs)("div",{className:"grid grid-cols-12 gap-3 mt-8",children:[(0,a.jsxs)("div",{className:"col-span-12 col-start-1 sm:col-span-8",children:[(0,a.jsx)("hr",{}),b.length>0?(0,a.jsx)("ul",{className:"flex flex-col",children:b.map(e=>(0,a.jsx)("li",{children:(0,a.jsx)(i.Y,{...e})},e.slug))}):(0,a.jsx)("p",{children:"No posts found"}),(0,a.jsx)(d.Suspense,{fallback:(0,a.jsx)("div",{children:"Loading pagination..."}),children:(0,a.jsx)(s.e,{totalPages:g,currentPage:n,onPageChange:n=>{e.push("?page=".concat(n))},className:"justify-end mt-4"})})]}),(0,a.jsxs)(c.Zb,{className:"col-span-12 row-start-3 h-fit sm:col-span-4 sm:col-start-9 sm:row-start-1",children:[(0,a.jsx)(c.Ol,{children:(0,a.jsx)(c.ll,{className:"text-[#585a5c] dark:text-slate-200",children:"Tags"})}),(0,a.jsx)(c.aY,{className:"flex flex-wrap gap-2 text-[#585a5c] dark:text-slate-200",children:F.map(e=>(0,a.jsx)(t.V,{tag:e,count:m[e]},e))})]})]})]})]})}}},function(e){e.O(0,[250,803,991,971,69,744],function(){return e(e.s=4909)}),_N_E=e.O()}]);